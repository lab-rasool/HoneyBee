---
export interface Props {
  code: string;
  lang: string;
  filename?: string;
}

const { code, lang, filename } = Astro.props;
---

<div class="code-block-container">
  <div class="code-block-header">
    <div class="window-controls">
      <span class="window-control close"></span>
      <span class="window-control minimize"></span>
      <span class="window-control maximize"></span>
    </div>
    {filename && <span class="filename">{filename}</span>}
    <button class="copy-button" onclick="copyCode(this)">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="currentColor"
        viewBox="0 0 16 16"
      >
        <path
          d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"
        ></path>
        <path
          d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"
        ></path>
      </svg>
      <span>Copy code</span>
    </button>
  </div>
  <pre
    class={`language-${lang}`}><code class={`language-${lang}`}>{code}</code></pre>
</div>

<script is:inline>
  function copyCode(button) {
    const pre = button.parentElement.nextElementSibling;
    const code = pre.querySelector("code");
    const textToCopy = code.textContent;

    navigator.clipboard.writeText(textToCopy).then(
      () => {
        // Change button text temporarily
        const spanElement = button.querySelector("span");
        const originalText = spanElement.textContent;
        spanElement.textContent = "Copied!";

        setTimeout(() => {
          spanElement.textContent = originalText;
        }, 2000);
      },
      () => {
        console.error("Failed to copy code");
      }
    );
  }
</script>

<style>
  .code-block-container {
    margin: 1.5rem 0;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  .code-block-header {
    display: flex;
    align-items: center;
    background-color: #282c34;
    padding: 0.5rem 1rem;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    border: 1px solid #3a3f4b;
    border-bottom: none;
  }

  .window-controls {
    display: flex;
    gap: 6px;
    margin-right: 12px;
  }

  .window-control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  .window-control.close {
    background-color: #ff5f56;
  }

  .window-control.minimize {
    background-color: #ffbd2e;
  }

  .window-control.maximize {
    background-color: #27c93f;
  }

  .filename {
    flex: 1;
    font-size: 0.875rem;
    color: #bbc0c9;
  }

  .copy-button {
    background: none;
    border: none;
    display: flex;
    align-items: center;
    gap: 6px;
    color: #bbc0c9;
    cursor: pointer;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    transition: background-color 0.2s;
    font-size: 0.75rem;
  }

  .copy-button:hover {
    background-color: #3a3f4b;
  }

  pre {
    margin: 0 !important;
    border: 1px solid #3a3f4b;
    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    padding: 1rem;
    background-color: #1e2127 !important; /* Dark background */
    overflow-x: auto;
  }
</style>
